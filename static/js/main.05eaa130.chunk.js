(this["webpackJsonpgoit-react-hw-04-hooks-phonebook"]=this["webpackJsonpgoit-react-hw-04-hooks-phonebook"]||[]).push([[0],{17:function(t,e,n){},19:function(t,e,n){"use strict";n.r(e);var a=n(1),c=n.n(a),s=n(10),r=n.n(s),o=(n(17),n(11)),i=n(3),l=n(7),u=n.n(l),b=n(2),m=n.n(b),j=n(0),d=function(t){var e=t.onSubmit,n=Object(a.useState)(""),c=Object(i.a)(n,2),s=c[0],r=c[1],o=Object(a.useState)(""),l=Object(i.a)(o,2),u=l[0],b=l[1],d=function(t){var e=t.target,n=e.name,a=e.value;"name"===n&&r(a),"number"===n&&b(a)},p=function(){r(""),b("")};return Object(j.jsxs)("form",{onSubmit:function(t){t.preventDefault(),e(s,u),p()},className:m.a.form,children:[Object(j.jsxs)("label",{className:m.a.label,children:["Name",Object(j.jsx)("input",{className:m.a.input,type:"text",name:"name",value:s,onChange:d,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})]}),Object(j.jsxs)("label",{className:m.a.label,children:["Number",Object(j.jsx)("input",{className:m.a.input,type:"tel",name:"number",value:u,onChange:d,pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0})]}),Object(j.jsx)("button",{className:m.a.btn,type:"submit",children:"Add contact"})]})},p=n(5),h=n.n(p),f=function(t){var e=t.filteredContacts,n=t.onDeleteContacts;return Object(j.jsx)("ul",{className:h.a.list,children:e.map((function(t){return Object(j.jsxs)("li",{className:h.a.item,children:[Object(j.jsxs)("p",{className:h.a.text,children:[t.name,": ",t.number]}),Object(j.jsx)("button",{className:h.a.btn,type:"button",onClick:function(){return n(t.id)},children:"Delete"})]},t.id)}))})},O=n(9),_=n.n(O),x=function(t){var e=t.value,n=t.onChange;return Object(j.jsxs)("label",{className:_.a.label,children:["Find contacts by name",Object(j.jsx)("input",{className:_.a.input,type:"text",value:e,onChange:n})]})},C=n(12),N="contacts",v=function(){var t=Object(a.useState)([]),e=Object(i.a)(t,2),n=e[0],c=e[1],s=Object(a.useState)(""),r=Object(i.a)(s,2),l=r[0],b=r[1];Object(a.useEffect)((function(){var t=function(t){try{return JSON.parse(localStorage.getItem(t))}catch(e){return null}}(N);t&&c(t)}),[]),Object(a.useEffect)((function(){!function(t,e){try{localStorage.setItem(t,JSON.stringify(e))}catch(n){return null}}(N,n)}),[n]);var m=function(){var t=l.toLowerCase();return n.filter((function(e){return e.name.toLowerCase().includes(t)}))};return Object(j.jsxs)("div",{className:u.a.container,children:[Object(j.jsx)("h1",{className:u.a.title,children:"Phonebook"}),Object(j.jsx)(d,{onSubmit:function(t,e){var a={id:Object(C.a)(),name:t,number:e};return n.some((function(t){return t.name.toLowerCase()===a.name.toLowerCase()}))?alert("".concat(a.name," is already in contacts!")):c([a].concat(Object(o.a)(n)))}}),Object(j.jsx)("h2",{className:u.a.title,children:"Contacts"}),n.length>1&&Object(j.jsx)(x,{value:l,onChange:function(t){b(t.target.value)}}),!!m().length&&Object(j.jsx)(f,{filteredContacts:m(),onDeleteContacts:function(t){c((function(e){return b(""),e.filter((function(e){return e.id!==t}))}))}})]})};r.a.render(Object(j.jsx)(c.a.StrictMode,{children:Object(j.jsx)(v,{})}),document.getElementById("root"))},2:function(t,e,n){t.exports={form:"ContactForm_form__3F-dl",label:"ContactForm_label__QY1OG",input:"ContactForm_input__FRtOU",btn:"ContactForm_btn__1GZKJ"}},5:function(t,e,n){t.exports={list:"ContactList_list__3AieU",text:"ContactList_text__3HC6F",btn:"ContactList_btn__3Dh3e"}},7:function(t,e,n){t.exports={container:"App_container__3lHwJ",title:"App_title__1pxVH"}},9:function(t,e,n){t.exports={label:"Filter_label__2P_5s",input:"Filter_input__266qj"}}},[[19,1,2]]]);
//# sourceMappingURL=main.05eaa130.chunk.js.map