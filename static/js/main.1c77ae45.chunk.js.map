{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.js","services/localStorage.js","index.js","components/ContactList/ContactList.module.css","components/App/App.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","target","value","setState","handelSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","label","input","type","onChange","pattern","title","required","btn","Component","ContactList","filteredContacts","onDeleteContacts","list","map","contact","item","text","onClick","id","Filter","STORAGE_KEY","App","contacts","filter","formSubmitHandler","newContact","nanoid","some","toLowerCase","alert","deleteContact","contactId","prevState","getFilteredContacts","normalizeFilter","includes","changeFilter","savedContacts","key","JSON","parse","localStorage","getItem","error","storage","prevProps","setItem","stringify","container","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c77ae45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2P_5s\",\"input\":\"Filter_input__266qj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3F-dl\",\"label\":\"ContactForm_label__QY1OG\",\"input\":\"ContactForm_input__FRtOU\",\"btn\":\"ContactForm_btn__1GZKJ\"};","import styles from './ContactForm.module.css';\n\nimport { Component } from 'react';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handelSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handelSubmit} className={styles.form}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styles from './ContactList.module.css';\n\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ filteredContacts, onDeleteContacts }) => (\n  <ul className={styles.list}>\n    {filteredContacts.map(contact => (\n      <li key={contact.id} className={styles.item}>\n        <p className={styles.text}>\n          {contact.name}: {contact.number}\n        </p>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={() => onDeleteContacts(contact.id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.array,\n  onDeleteContacts: PropTypes.func,\n};\n\nexport default ContactList;\n","import styles from './Filter.module.css';\n\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    ></input>\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import styles from './App.module.css';\nimport ContactForm from '../ContactForm/ContactForm.jsx';\nimport ContactList from '../ContactList/ContactList.jsx';\nimport Filter from '../Filter/Filter.jsx';\nimport * as storage from '../../services/localStorage';\n\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nconst STORAGE_KEY = 'contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const savedContacts = storage.get(STORAGE_KEY);\n    if (savedContacts) {\n      this.setState({ contacts: savedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState, prevProps) {\n    if (prevState.contacts !== this.state.contacts) {\n      storage.save(STORAGE_KEY, this.state.contacts);\n    }\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => {\n      if (\n        contacts.some(\n          contact =>\n            contact.name.toLowerCase() === newContact.name.toLowerCase(),\n        )\n      ) {\n        return alert(`${newContact.name} is already in contacts!`);\n      }\n\n      return { contacts: [newContact, ...contacts] };\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n      filter: '',\n    }));\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <div className={styles.container}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <h2 className={styles.title}>Contacts</h2>\n\n        {this.state.contacts.length > 1 && (\n          <Filter value={this.state.filter} onChange={this.changeFilter} />\n        )}\n\n        {!!filteredContacts.length && (\n          <ContactList\n            filteredContacts={filteredContacts}\n            onDeleteContacts={this.deleteContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3AieU\",\"text\":\"ContactList_text__3HC6F\",\"btn\":\"ContactList_btn__3Dh3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3lHwJ\",\"title\":\"App_title__1pxVH\"};"],"sourceRoot":""}