{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.js","services/localStorage.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/App/App.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","preventDefault","className","styles","form","label","input","type","onChange","pattern","title","required","btn","ContactList","filteredContacts","onDeleteContacts","list","map","contact","item","text","onClick","id","Filter","STORAGE_KEY","App","contacts","setContacts","filter","setFilter","useEffect","savedContacts","key","JSON","parse","localStorage","getItem","error","storage","setItem","stringify","getFilteredContacts","normalizeFilter","toLowerCase","includes","container","newContact","nanoid","some","alert","length","contactId","prevContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0RAmEeA,EA/DK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAED,SAATP,GACFC,EAAQM,GAEG,WAATP,GACFG,EAAUI,IAURC,EAAQ,WACZP,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAML,SAZa,SAAAO,GACnBA,EAAEI,iBACFX,EAASE,EAAME,GACfM,KAS8BE,UAAWC,IAAOC,KAAhD,UACE,wBAAOF,UAAWC,IAAOE,MAAzB,iBAEE,uBACEH,UAAWC,IAAOG,MAClBC,KAAK,OACLf,KAAK,OACLO,MAAOP,EACPgB,SAAUZ,EACVa,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAIZ,wBAAOT,UAAWC,IAAOE,MAAzB,mBAEE,uBACEH,UAAWC,IAAOG,MAClBC,KAAK,MACLf,KAAK,SACLO,MAAOL,EACPc,SAAUZ,EACVa,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,OAIZ,wBAAQT,UAAWC,IAAOS,IAAKL,KAAK,SAApC,6B,gBChCSM,EAxBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBC,EAArB,EAAqBA,iBAArB,OAClB,oBAAIb,UAAWC,IAAOa,KAAtB,SACGF,EAAiBG,KAAI,SAAAC,GAAO,OAC3B,qBAAqBhB,UAAWC,IAAOgB,KAAvC,UACE,oBAAGjB,UAAWC,IAAOiB,KAArB,UACGF,EAAQ1B,KADX,KACmB0B,EAAQxB,UAE3B,wBACEQ,UAAWC,IAAOS,IAClBL,KAAK,SACLc,QAAS,kBAAMN,EAAiBG,EAAQI,KAH1C,sBAJOJ,EAAQI,U,gBCcRC,EAjBA,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOS,EAAV,EAAUA,SAAV,OACb,wBAAON,UAAWC,IAAOE,MAAzB,kCAEE,uBACEH,UAAWC,IAAOG,MAClBC,KAAK,OACLR,MAAOA,EACPS,SAAUA,Q,QCDVgB,EAAc,WA0ELC,EAxEH,WACV,MAAgClC,mBAAS,IAAzC,mBAAOmC,EAAP,KAAiBC,EAAjB,KACA,EAA4BpC,mBAAS,IAArC,mBAAOqC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMC,ECTE,SAAAC,GACV,IACE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQJ,IACvC,MAAOK,GACP,OAAO,MDKeC,CAAYd,GAC9BO,GACFJ,EAAYI,KAEb,IAEHD,qBAAU,YCvBC,SAACE,EAAKjC,GACjB,IACEoC,aAAaI,QAAQP,EAAKC,KAAKO,UAAUzC,IACzC,MAAOsC,GACP,OAAO,MDoBPC,CAAad,EAAaE,KACzB,CAACA,IAEJ,IAyBMe,EAAsB,WAC1B,IAAMC,EAAkBd,EAAOe,cAE/B,OAAOjB,EAASE,QAAO,SAAAV,GAAO,OAC5BA,EAAQ1B,KAAKmD,cAAcC,SAASF,OAQxC,OACE,sBAAKxC,UAAWC,IAAO0C,UAAvB,UACE,oBAAI3C,UAAWC,IAAOO,MAAtB,uBAEA,cAAC,EAAD,CAAapB,SAzCS,SAACE,EAAME,GAC/B,IAAMoD,EAAa,CACjBxB,GAAIyB,cACJvD,OACAE,UAGF,OACEgC,EAASsB,MACP,SAAA9B,GAAO,OAAIA,EAAQ1B,KAAKmD,gBAAkBG,EAAWtD,KAAKmD,iBAGrDM,MAAM,GAAD,OAAIH,EAAWtD,KAAf,6BAGPmC,EAAY,CAACmB,GAAF,mBAAiBpB,QA4BjC,oBAAIxB,UAAWC,IAAOO,MAAtB,sBAECgB,EAASwB,OAAS,GAAK,cAAC,EAAD,CAAQnD,MAAO6B,EAAQpB,SAZ9B,SAAAX,GACnBgC,EAAUhC,EAAEC,OAAOC,YAad0C,IAAsBS,QACvB,cAAC,EAAD,CACEpC,iBAAkB2B,IAClB1B,iBAhCc,SAAAoC,GACpBxB,GAAY,SAAAyB,GAEV,OADAvB,EAAU,IACHuB,EAAaxB,QAAO,SAAAV,GAAO,OAAIA,EAAQI,KAAO6B,eE1C3DE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,kBCA/HD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,2B,kBCA1FD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,kBCA7DD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.05eaa130.chunk.js","sourcesContent":["import styles from './ContactForm.module.css';\n\nimport { useState } from 'react';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handelSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import styles from './ContactList.module.css';\n\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ filteredContacts, onDeleteContacts }) => (\n  <ul className={styles.list}>\n    {filteredContacts.map(contact => (\n      <li key={contact.id} className={styles.item}>\n        <p className={styles.text}>\n          {contact.name}: {contact.number}\n        </p>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={() => onDeleteContacts(contact.id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.array,\n  onDeleteContacts: PropTypes.func,\n};\n\nexport default ContactList;\n","import styles from './Filter.module.css';\n\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    ></input>\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import styles from './App.module.css';\n\nimport ContactForm from '../ContactForm/ContactForm.jsx';\nimport ContactList from '../ContactList/ContactList.jsx';\nimport Filter from '../Filter/Filter.jsx';\nimport * as storage from '../../services/localStorage';\n\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\n\nconst STORAGE_KEY = 'contacts';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const savedContacts = storage.get(STORAGE_KEY);\n    if (savedContacts) {\n      setContacts(savedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    storage.save(STORAGE_KEY, contacts);\n  }, [contacts]);\n\n  const formSubmitHandler = (name, number) => {\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n      )\n    ) {\n      return alert(`${newContact.name} is already in contacts!`);\n    }\n\n    return setContacts([newContact, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts => {\n      setFilter('');\n      return prevContacts.filter(contact => contact.id !== contactId);\n    });\n  };\n\n  const getFilteredContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Phonebook</h1>\n\n      <ContactForm onSubmit={formSubmitHandler} />\n\n      <h2 className={styles.title}>Contacts</h2>\n\n      {contacts.length > 1 && <Filter value={filter} onChange={changeFilter} />}\n\n      {!!getFilteredContacts().length && (\n        <ContactList\n          filteredContacts={getFilteredContacts()}\n          onDeleteContacts={deleteContact}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3F-dl\",\"label\":\"ContactForm_label__QY1OG\",\"input\":\"ContactForm_input__FRtOU\",\"btn\":\"ContactForm_btn__1GZKJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3AieU\",\"text\":\"ContactList_text__3HC6F\",\"btn\":\"ContactList_btn__3Dh3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3lHwJ\",\"title\":\"App_title__1pxVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2P_5s\",\"input\":\"Filter_input__266qj\"};"],"sourceRoot":""}